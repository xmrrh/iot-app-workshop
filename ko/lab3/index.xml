<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Application Frontend 만들기 on Hugo 템플릿 활용하기</title>
    <link>/ko/lab3/</link>
    <description>Recent content in Application Frontend 만들기 on Hugo 템플릿 활용하기</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="/ko/lab3/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>React package 추가하기</title>
      <link>/ko/lab3/react-package-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/ko/lab3/react-package-install/</guid>
      <description>React 웹어플리케이션에서 필요한 패키지들을 설치합니다.
다음 명령어를 이용하여 aws-amplify과 @aws-amplify/ui-react 를 설치합니다. aws-amplify 패키지는 amplify를 위한 main 라이브리리 입니다. React specific UI components를 위해 @aws-amplify/ui-react도 설치합니다.
npm install aws-amplify @aws-amplify/ui-react  그리고, 필요한 패키지를 다음 명령어를 이용하여 추가 설치합니다.
npm install --save semantic-ui-react react-d3-speedometer react-router-dom qs highcharts highcharts-react-official  </description>
    </item>
    
    <item>
      <title>웹 어플리케이션 작성하기</title>
      <link>/ko/lab3/frontend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/ko/lab3/frontend/</guid>
      <description>App.js 수정하기
App.js로 이동하여 파일 내용을 아래와 같이 수정합니다.
import React, { useEffect, useState } from &amp;quot;react&amp;quot;; import ReactSpeedometer from &amp;quot;react-d3-speedometer&amp;quot;; import { Container, Header } from &amp;quot;semantic-ui-react&amp;quot;; import { Link } from &amp;quot;react-router-dom&amp;quot;; import { withAuthenticator } from &amp;quot;@aws-amplify/ui-react&amp;quot;; import * as subscriptions from &amp;quot;./graphql/subscriptions&amp;quot;; import Amplify, { API, graphqlOperation } from &amp;quot;aws-amplify&amp;quot;; import awsExports from &amp;quot;./aws-exports&amp;quot;; Amplify.configure(awsExports); function App() { const [wCurrentLoad, setWCurrentLoad] = useState(); const [wRMSCurrent, setWRMSCurrent] = useState(); useEffect(() =&amp;gt; { const RMSsubscription = API.</description>
    </item>
    
  </channel>
</rss>